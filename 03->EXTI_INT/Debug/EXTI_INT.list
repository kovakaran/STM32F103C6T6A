
EXTI_INT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800030c  08000314  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800030c  0800030c  00010314  2**0
                  CONTENTS
  4 .ARM          00000000  0800030c  0800030c  00010314  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800030c  08000314  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800030c  0800030c  0001030c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000310  08000310  00010310  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000314  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000314  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010314  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0001033d  2**0
                  CONTENTS, READONLY
 13 .debug_info   000001c1  00000000  00000000  00010380  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000fb  00000000  00000000  00010541  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000088  00000000  00000000  00010640  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000005d  00000000  00000000  000106c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000015b4  00000000  00000000  00010725  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000055f  00000000  00000000  00011cd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000671c  00000000  00000000  00012238  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000168  00000000  00000000  00018954  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000050  00000000  00000000  00018abc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002f4 	.word	0x080002f4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002f4 	.word	0x080002f4

08000170 <SysTick_Handler>:
/******************************************************************************                                                                           *                                                                          *
 * 			 			Interrupt-Handler Functions                           *
 *****************************************************************************/

// SysTick_Handler function will be called every microsecond
void SysTick_Handler(void) {
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
    micros++;
 8000174:	4b04      	ldr	r3, [pc, #16]	; (8000188 <SysTick_Handler+0x18>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	3301      	adds	r3, #1
 800017a:	4a03      	ldr	r2, [pc, #12]	; (8000188 <SysTick_Handler+0x18>)
 800017c:	6013      	str	r3, [r2, #0]
}
 800017e:	bf00      	nop
 8000180:	46bd      	mov	sp, r7
 8000182:	bc80      	pop	{r7}
 8000184:	4770      	bx	lr
 8000186:	bf00      	nop
 8000188:	2000001c 	.word	0x2000001c

0800018c <main>:
void EXTI_Init(void);
void EXTI0_IRQHandler(void);


int main(void)
{
 800018c:	b580      	push	{r7, lr}
 800018e:	af00      	add	r7, sp, #0
	RCC_APB2_Init();
 8000190:	f000 f806 	bl	80001a0 <RCC_APB2_Init>
	EXTI_Init();
 8000194:	f000 f826 	bl	80001e4 <EXTI_Init>
 8000198:	2300      	movs	r3, #0

}
 800019a:	4618      	mov	r0, r3
 800019c:	bd80      	pop	{r7, pc}
	...

080001a0 <RCC_APB2_Init>:

void RCC_APB2_Init(void)
{
 80001a0:	b480      	push	{r7}
 80001a2:	af00      	add	r7, sp, #0
    RCC_APB2ENR |= 0x00000005;		// Enable GPIO-A Clock
 80001a4:	4b0c      	ldr	r3, [pc, #48]	; (80001d8 <RCC_APB2_Init+0x38>)
 80001a6:	681b      	ldr	r3, [r3, #0]
 80001a8:	4a0b      	ldr	r2, [pc, #44]	; (80001d8 <RCC_APB2_Init+0x38>)
 80001aa:	f043 0305 	orr.w	r3, r3, #5
 80001ae:	6013      	str	r3, [r2, #0]

    GPIOA_CRL &= 0xffffff00;		// Set A0 for internal pull-down, A1 for output
 80001b0:	4b0a      	ldr	r3, [pc, #40]	; (80001dc <RCC_APB2_Init+0x3c>)
 80001b2:	681b      	ldr	r3, [r3, #0]
 80001b4:	4a09      	ldr	r2, [pc, #36]	; (80001dc <RCC_APB2_Init+0x3c>)
 80001b6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80001ba:	6013      	str	r3, [r2, #0]
    GPIOA_CRL |= 0x00000028;
 80001bc:	4b07      	ldr	r3, [pc, #28]	; (80001dc <RCC_APB2_Init+0x3c>)
 80001be:	681b      	ldr	r3, [r3, #0]
 80001c0:	4a06      	ldr	r2, [pc, #24]	; (80001dc <RCC_APB2_Init+0x3c>)
 80001c2:	f043 0328 	orr.w	r3, r3, #40	; 0x28
 80001c6:	6013      	str	r3, [r2, #0]

    GPIOA_ODR = 0x00000002;			// Set Output-high
 80001c8:	4b05      	ldr	r3, [pc, #20]	; (80001e0 <RCC_APB2_Init+0x40>)
 80001ca:	2202      	movs	r2, #2
 80001cc:	601a      	str	r2, [r3, #0]

}
 80001ce:	bf00      	nop
 80001d0:	46bd      	mov	sp, r7
 80001d2:	bc80      	pop	{r7}
 80001d4:	4770      	bx	lr
 80001d6:	bf00      	nop
 80001d8:	40021018 	.word	0x40021018
 80001dc:	40010800 	.word	0x40010800
 80001e0:	4001080c 	.word	0x4001080c

080001e4 <EXTI_Init>:


void EXTI_Init(void)
{
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0

	// Configure EXTI Line0
	EXTI_IMR = 0x00000001;			//Un-mask A0 for External Interrupt
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <EXTI_Init+0x38>)
 80001ea:	2201      	movs	r2, #1
 80001ec:	601a      	str	r2, [r3, #0]
	EXTI_RTSR = 0x00000001;			//Set Rising-edge as Interrupt
 80001ee:	4b0c      	ldr	r3, [pc, #48]	; (8000220 <EXTI_Init+0x3c>)
 80001f0:	2201      	movs	r2, #1
 80001f2:	601a      	str	r2, [r3, #0]

	// Set the interrupt priority
	NVIC_IPR0 &= ~0xFF;  			// Clear priority bits
 80001f4:	4b0b      	ldr	r3, [pc, #44]	; (8000224 <EXTI_Init+0x40>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a0a      	ldr	r2, [pc, #40]	; (8000224 <EXTI_Init+0x40>)
 80001fa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80001fe:	6013      	str	r3, [r2, #0]
    NVIC_IPR0 |= (0 << 4);  		// Set priority to the lowest value (highest priority)
 8000200:	4b08      	ldr	r3, [pc, #32]	; (8000224 <EXTI_Init+0x40>)
 8000202:	4a08      	ldr	r2, [pc, #32]	; (8000224 <EXTI_Init+0x40>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	6013      	str	r3, [r2, #0]

	// Enable the interrupt
	NVIC_ISER0 |= (1 << 6);  		// EXTI0_IRQn is at position 6 in ISER register
 8000208:	4b07      	ldr	r3, [pc, #28]	; (8000228 <EXTI_Init+0x44>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a06      	ldr	r2, [pc, #24]	; (8000228 <EXTI_Init+0x44>)
 800020e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000212:	6013      	str	r3, [r2, #0]

}
 8000214:	bf00      	nop
 8000216:	46bd      	mov	sp, r7
 8000218:	bc80      	pop	{r7}
 800021a:	4770      	bx	lr
 800021c:	40010400 	.word	0x40010400
 8000220:	40010420 	.word	0x40010420
 8000224:	e000e400 	.word	0xe000e400
 8000228:	e000e100 	.word	0xe000e100

0800022c <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void)
{
 800022c:	b480      	push	{r7}
 800022e:	af00      	add	r7, sp, #0

	if(EXTI_PR == 0x00000001)
 8000230:	4b07      	ldr	r3, [pc, #28]	; (8000250 <EXTI0_IRQHandler+0x24>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	2b01      	cmp	r3, #1
 8000236:	d107      	bne.n	8000248 <EXTI0_IRQHandler+0x1c>
	{
		EXTI_PR = 0x00000001;			//Clear Pending register
 8000238:	4b05      	ldr	r3, [pc, #20]	; (8000250 <EXTI0_IRQHandler+0x24>)
 800023a:	2201      	movs	r2, #1
 800023c:	601a      	str	r2, [r3, #0]
		GPIOA_ODR = ~GPIOA_ODR;
 800023e:	4b05      	ldr	r3, [pc, #20]	; (8000254 <EXTI0_IRQHandler+0x28>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	4a04      	ldr	r2, [pc, #16]	; (8000254 <EXTI0_IRQHandler+0x28>)
 8000244:	43db      	mvns	r3, r3
 8000246:	6013      	str	r3, [r2, #0]
	}
}
 8000248:	bf00      	nop
 800024a:	46bd      	mov	sp, r7
 800024c:	bc80      	pop	{r7}
 800024e:	4770      	bx	lr
 8000250:	40010450 	.word	0x40010450
 8000254:	4001080c 	.word	0x4001080c

08000258 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000258:	480d      	ldr	r0, [pc, #52]	; (8000290 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800025c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000260:	480c      	ldr	r0, [pc, #48]	; (8000294 <LoopForever+0x6>)
  ldr r1, =_edata
 8000262:	490d      	ldr	r1, [pc, #52]	; (8000298 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000264:	4a0d      	ldr	r2, [pc, #52]	; (800029c <LoopForever+0xe>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000268:	e002      	b.n	8000270 <LoopCopyDataInit>

0800026a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800026c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026e:	3304      	adds	r3, #4

08000270 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000270:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000272:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000274:	d3f9      	bcc.n	800026a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000276:	4a0a      	ldr	r2, [pc, #40]	; (80002a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000278:	4c0a      	ldr	r4, [pc, #40]	; (80002a4 <LoopForever+0x16>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800027c:	e001      	b.n	8000282 <LoopFillZerobss>

0800027e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000280:	3204      	adds	r2, #4

08000282 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000282:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000284:	d3fb      	bcc.n	800027e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000286:	f000 f811 	bl	80002ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028a:	f7ff ff7f 	bl	800018c <main>

0800028e <LoopForever>:

LoopForever:
  b LoopForever
 800028e:	e7fe      	b.n	800028e <LoopForever>
  ldr   r0, =_estack
 8000290:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000294:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000298:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800029c:	08000314 	.word	0x08000314
  ldr r2, =_sbss
 80002a0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a4:	20000020 	.word	0x20000020

080002a8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a8:	e7fe      	b.n	80002a8 <ADC1_2_IRQHandler>
	...

080002ac <__libc_init_array>:
 80002ac:	b570      	push	{r4, r5, r6, lr}
 80002ae:	2600      	movs	r6, #0
 80002b0:	4d0c      	ldr	r5, [pc, #48]	; (80002e4 <__libc_init_array+0x38>)
 80002b2:	4c0d      	ldr	r4, [pc, #52]	; (80002e8 <__libc_init_array+0x3c>)
 80002b4:	1b64      	subs	r4, r4, r5
 80002b6:	10a4      	asrs	r4, r4, #2
 80002b8:	42a6      	cmp	r6, r4
 80002ba:	d109      	bne.n	80002d0 <__libc_init_array+0x24>
 80002bc:	f000 f81a 	bl	80002f4 <_init>
 80002c0:	2600      	movs	r6, #0
 80002c2:	4d0a      	ldr	r5, [pc, #40]	; (80002ec <__libc_init_array+0x40>)
 80002c4:	4c0a      	ldr	r4, [pc, #40]	; (80002f0 <__libc_init_array+0x44>)
 80002c6:	1b64      	subs	r4, r4, r5
 80002c8:	10a4      	asrs	r4, r4, #2
 80002ca:	42a6      	cmp	r6, r4
 80002cc:	d105      	bne.n	80002da <__libc_init_array+0x2e>
 80002ce:	bd70      	pop	{r4, r5, r6, pc}
 80002d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d4:	4798      	blx	r3
 80002d6:	3601      	adds	r6, #1
 80002d8:	e7ee      	b.n	80002b8 <__libc_init_array+0xc>
 80002da:	f855 3b04 	ldr.w	r3, [r5], #4
 80002de:	4798      	blx	r3
 80002e0:	3601      	adds	r6, #1
 80002e2:	e7f2      	b.n	80002ca <__libc_init_array+0x1e>
 80002e4:	0800030c 	.word	0x0800030c
 80002e8:	0800030c 	.word	0x0800030c
 80002ec:	0800030c 	.word	0x0800030c
 80002f0:	08000310 	.word	0x08000310

080002f4 <_init>:
 80002f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f6:	bf00      	nop
 80002f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fa:	bc08      	pop	{r3}
 80002fc:	469e      	mov	lr, r3
 80002fe:	4770      	bx	lr

08000300 <_fini>:
 8000300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000302:	bf00      	nop
 8000304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000306:	bc08      	pop	{r3}
 8000308:	469e      	mov	lr, r3
 800030a:	4770      	bx	lr
